{"version":3,"sources":["../../src/initializer/initializer.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,CAAC,MAAqB,QAAQ,CAAC;AAC3C,OAAO,EAAC,OAAO,IAAI,QAAQ,EAAC,MAAM,cAAc,CAAC;AACjD,OAAO,UAAU,MAAiB,4BAA4B,CAAC;AAC/D,OAAO,cAAc,MAAa,mCAAmC,CAAC;AACtE,OAAO,gBAAgB,MAAW,uCAAuC,CAAC;AAC1E,OAAO,SAAS,MAAkB,uBAAuB,CAAC;AAE1D,MAAM,CAAC,OAAO,WAAU,OAAO;IAC7B,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,EAAC,OAAO,SAAA,EAAC,CAAC,CAAC;IAC1B,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;IAC9C,cAAc,CAAC,IAAI,CAAC,CAAC;IACrB,gBAAgB,CAAC,IAAI,CAAC,CAAC;IACvB,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAErB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;QACd,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAA;KAC5E;IACD,IAAM,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;IACxC,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE;QAC1B,WAAW,CAAC,SAAS,GAAG,YAAY,CAAC,CAAC,eAAe;KACtD;IACD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;QACtB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;KAC7B;IAED,IAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE;QACvB,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC;KACrB;IAED,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;AACzC,CAAC","file":"initializer.js","sourceRoot":"","sourcesContent":["import * as _                from 'lodash';\r\nimport {configs as _configs} from '../_lib/vars';          \r\nimport roleSetter            from '../role-setter/role-setter';\r\nimport rolesAssembler        from './roles-assembler/roles-assembler';\r\nimport redirectCapturer      from './redirect-capturer/redirect-capturer';\r\nimport historian             from './historian/historian';\r\n\r\nexport default function(configs) {\r\n  _.extend(this, {configs});\r\n  _.extend(_configs, configs, {guardian: this});\r\n  rolesAssembler(this);\r\n  redirectCapturer(this);\r\n  historian.call(this);\r\n\r\n  if (!this.http) {\r\n    throw new Error('Guardian does not have HttpClientPlus instance injected.')\r\n  }\r\n  const httpConfigs = configs.httpConfigs;\r\n  if (!httpConfigs.tokenName) {\r\n    httpConfigs.tokenName = 'auth-token'; // set default;\r\n  }\r\n  if (!this.http.configs) {\r\n    this.http.init(httpConfigs);\r\n  }\r\n\r\n  if(this.http.getToken()) {\r\n    return this.login();\r\n  }\r\n  \r\n  roleSetter.call(this, 'noAuth', false);\r\n}\r\n"]}