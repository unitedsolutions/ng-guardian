{"version":3,"sources":["../../src/login-processor/login-processor.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,CAAC,MAAM,QAAQ,CAAC;AAC5B,OAAO,gBAAgB,MAAM,0CAA0C,CAAC;AACxE,OAAO,UAAU,MAAM,4BAA4B,CAAC;AAEpD,MAAM,CAAC,OAAO,WAAU,WAAW;IAAnC,iBAoBC;IAnBC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;QACjC,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC,SAAS,CAC1D,UAAA,IAAI;YACF,IAAI,MAAM,GAAG,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;YACvC,IAAA,yBAAgD,EAA9C,kBAAM,EAAE,gBAAK,EAAE,kBAAM,CAA0B;YACrD,KAAI,CAAC,IAAI,GAAG,MAAM,CAAC;YACnB,KAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAC1B,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;YAE5B,CAAC,CAAC,MAAM,CAAC,KAAI,EAAE,EAAE,IAAI,MAAA,EAAE,CAAC,CAAC;YACzB,UAAU,CAAC,IAAI,CAAC,KAAI,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;YAC5C,gBAAgB,CAAC,KAAK,CAAC,CAAC;YACxB,OAAO,CAAC,EAAC,IAAI,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;QACxD,CAAC,EACD,UAAA,GAAG;YACD,MAAM,CAAC,GAAG,CAAC,CAAC;QACd,CAAC,CACF,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC","file":"login-processor.js","sourceRoot":"","sourcesContent":["import * as _ from \"lodash\";\r\nimport autoLogoutSetter from \"../auto-logout-setter/auto-logout-setter\";\r\nimport roleSetter from \"../role-setter/role-setter\";\r\n\r\nexport default function(credentials) {\r\n  return new Promise((resolve, reject) => {\r\n    this.http.post(this.configs.loginUrl, credentials).subscribe(\r\n      data => {\r\n        let fields = [\"routes\", \"token\", \"result\"];\r\n        let { routes, token, result } = _.pick(data, fields);\r\n        this.auth = result;\r\n        this.http.setToken(token);\r\n        data = _.omit(data, fields);\r\n\r\n        _.extend(this, { data });\r\n        roleSetter.call(this, \"auth\", true, routes);\r\n        autoLogoutSetter(\"add\");\r\n        resolve({auth: (result ? result : 'ok'), data: data});\r\n      },\r\n      err => {\r\n        reject(err);\r\n      }\r\n    );\r\n  });\r\n}\r\n"]}