{"version":3,"sources":["../../src/unlock-processor/unlock-processor.ts"],"names":[],"mappings":"AACA,OAAO,cAAc,MAAM,sCAAsC,CAAC;AAClE,OAAO,EAAC,OAAO,EAAC,MAAM,cAAc,CAAC;AAErC,MAAM,CAAC,OAAO,WAAU,WAAW;IAAnC,iBA+BC;IA9BC,EAAE,CAAC,CAAC,OAAO,CAAC,yBAAyB,KAAK,IAAI,CAAC,CAAC,CAAC;QAC/C,EAAE,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;YAC1B,WAAW,CAAC,eAAe,CAAC,GAAG,OAAO,CAAC,aAAa,CAAC;QACvD,CAAC;IACH,CAAC;IACD,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;QACjC,EAAE,CAAC,CAAC,OAAO,CAAC,eAAe,KAAK,KAAK,CAAC,CAAC,CAAC;YACtC,MAAM,CAAC,OAAO,CAAC,EAAC,OAAO,EAAE,uEAAuE,EAAC,CAAC,CAAA;QACpG,CAAC;QACD,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,KAAK,IAAI,IAAI,OAAO,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAC/D,MAAM,CAAC,OAAO,CAAC,EAAC,OAAO,EAAE,mCAAmC,EAAC,CAAC,CAAA;QAChE,CAAC;QACD,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC,SAAS,CACtD,UAAA,IAAI;YACF,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACrC,iBAAiB;YACjB,cAAc,CAAC,QAAQ,CAAC,CAAC;YACzB,OAAO,CAAC,QAAQ,GAAC,IAAI,CAAC;YACtB,cAAc,CAAC,KAAK,CAAC,CAAC;YACtB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACT,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACvB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,OAAO,CAAC,EAAC,EAAE,EAAE,CAAC,EAAC,CAAC,CAAC;YAC1B,CAAC;QACH,CAAC,EACD,UAAA,GAAG;YACD,MAAM,CAAC,GAAG,CAAC,CAAC;QACd,CAAC,CACF,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC","file":"unlock-processor.js","sourceRoot":"","sourcesContent":["import * as _ from \"lodash\";\r\nimport autoLockSetter from \"../auto-lock-setter/auto-lock-setter\";\r\nimport {configs} from '../_lib/vars';\r\n\r\nexport default function(credentials) {\r\n  if (configs.gettingSettingsFromServer === true) {\r\n    if (configs.serverSettngs) {\r\n      credentials['serverSettngs'] = configs.serverSettngs;\r\n    } \r\n  }\r\n  return new Promise((resolve, reject) => {\r\n    if (configs.lockDownEnabled === false) {\r\n      return resolve({message: 'lockDown functionality is dissabled (configs.lockDownEnabled = false)'})\r\n    }\r\n    if (configs.unlockUrl === null || configs.unlockUrl.length < 1) {\r\n      return resolve({message: 'configs.unlockUrl is not defined,'})\r\n    }\r\n    this.http.post(configs.unlockUrl, credentials).subscribe(\r\n      data => {\r\n        this.sessionStatus.next('LOGGED_IN');\r\n        // reset lockDown\r\n        autoLockSetter(\"remove\");\r\n        configs.lockDown=null;\r\n        autoLockSetter(\"add\");\r\n        if (data) {\r\n          return resolve(data);\r\n        } else {\r\n          return resolve({ok: 1});\r\n        }\r\n      },\r\n      err => {\r\n        reject(err);\r\n      }\r\n    );\r\n  });\r\n}\r\n"]}